apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.rui.android_jenkins_sample"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
    }

    signingConfigs {
        release {
            keyAlias 'chuanyutang'
            keyPassword '123456'
            storeFile file('chuanyutang.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            multiDexEnabled true
            shrinkResources true    // 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled true
//            shrinkResources true    // 移除无用的resource文件
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            multiDexEnabled true
        }
    }

    productFlavors {
        product {}
        cert {}
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def fileName
            if (outputFileName != null && outputFileName.endsWith('.apk')) {
                // 输出apk名称为android-jenkins-sample-release-v1.0.0
                if (variant.buildType.name == 'release') {
                    fileName = "android-jenkins-sample-${variant.productFlavors[0].name}-release-v${defaultConfig.versionName}.apk"
                } else if (variant.buildType.name == 'debug') {
                    fileName = "android-jenkins-sample-${variant.productFlavors[0].name}-debug-v${defaultConfig.versionName}.apk"
                }
                outputFileName = fileName
            }
        }
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

println "APP子项目配置开始---"

afterEvaluate {
    println "APP子项目afterEvaluate回调..."
}

task appTest {
    println "APP子项目里任务配置---"
    doLast {
        println "执行子项目任务..."
    }
}

println "APP子项目配置结束---"

gradle.beforeProject {
    println "APP子项目.gradle.beforeProject"
}
gradle.afterProject {
    println "APP子项目.gradle.afterProject"
}
gradle.projectsEvaluated {
    println "APP子项目.gradle.projectsEvaluated"
}
gradle.taskGraph.whenReady {
    println "APP子项目.gradle.taskGraph.whenReady"
}

tasks.whenTaskAdded { Task task ->
    println "app.whenTaskAdded : "+task.name
}